import csv

# Read the CSV file
def read_csv_file(filename):
    data = []
    with open(filename, 'r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            data.append(row)
    return data

# Analyze the data
def analyze_data(data):
    seven_consecutive_days = []
    less_than_10_hours = []
    more_than_14_hours = []

    for row in data:
        # Analyze consecutive days
        if row['Timecard Hours (as Time)'] == '7':  # Placeholder condition
            seven_consecutive_days.append(row)

        # Analyze less than 10 hours between shift
        if int(row['Timecard Hours (as Time)']) < 10:  # Placeholder condition
            less_than_10_hours.append(row)

        # Analyze more than 14 hours in a single shift
        if int(row['Timecard Hours (as Time)']) > 14:  # Placeholder condition
            more_than_14_hours.append(row)

    return seven_consecutive_days, less_than_10_hours, more_than_14_hours

# Write output to file
def write_output_to_file(seven_consecutive_days, less_than_10_hours, more_than_14_hours, output_filename):
    with open(output_filename, 'w') as file:
        file.write("Employees who worked for 7 consecutive days:\n")
        for employee in seven_consecutive_days:
            file.write(f"{employee['Employee Name']} - {employee['Position ID']}\n")

        file.write("\nEmployees with less than 10 hours between shifts:\n")
        for employee in less_than_10_hours:
            file.write(f"{employee['Employee Name']} - {employee['Position ID']}\n")

        file.write("\nEmployees who worked for more than 14 hours in a single shift:\n")
        for employee in more_than_14_hours:
            file.write(f"{employee['Employee Name']} - {employee['Position ID']}\n")

# Main function
def main():
    filename = 'employee_data.csv'
    output_filename = 'output.txt'

    # Step 1: Read the file
    data = read_csv_file(filename)

    # Step 2: Analyze data
    seven_consecutive_days, less_than_10_hours, more_than_14_hours = analyze_data(data)

    # Step 3: Write output to file
    write_output_to_file(seven_consecutive_days, less_than_10_hours, more_than_14_hours, output_filename)

if __name__ == "__main__":
    main()
